plugins {
  id 'com.android.library'
  id 'com.facebook.react'
}

def findNodeModulesDir(startDir) {
  def dir = startDir
  while (dir != null) {
    def nm = new File(dir, "node_modules")
    if (nm.exists()) return nm
    dir = dir.getParentFile()
  }
  return null
}

def nodeModules = findNodeModulesDir(projectDir)
def reactNativeDir = new File(nodeModules, "react-native")
def reactAndroidDir = new File(reactNativeDir, "ReactAndroid")

android {
  namespace "com.myimagedecoder"
  compileSdkVersion rootProject.ext.get("compileSdkVersion")

  defaultConfig {
    minSdkVersion rootProject.ext.get("minSdkVersion")
    targetSdkVersion rootProject.ext.get("targetSdkVersion")
    versionCode 1
    versionName "1.0"

    externalNativeBuild {
      cmake {
        // потрібна статика C++ для RN JSI
        arguments "-DANDROID_STL=c++_shared"
      }
    }
    consumerProguardFiles "consumer-rules.pro"
  }

  externalNativeBuild {
    cmake {
      path file("CMakeLists.txt")
    }
  }

  sourceSets {
    main {
      java.srcDirs = ['src/main/java']
      manifest.srcFile 'src/main/AndroidManifest.xml'
      res.srcDirs = []
      assets.srcDirs = []
      jniLibs.srcDirs = ['src/main/jniLibs']
    }
  }

  // щоб уникнути конфліктів STL
  packagingOptions {
    pickFirst '**/libc++_shared.so'
  }
}

/**
 * Дуже важливо: гарантуємо, що ReactAndroid згенерує/скопіює свої jni libs
 * (libjsi.so, libreactnativejni.so) ДО запуску нашого externalNativeBuild.
 * Це вирішує помилку "missing .../libjsi.so".
 */
afterEvaluate {
  // якщо модуль ReactAndroid доступний як градел-проєкт (типовий кейс у RN застосунках)
  if (findProject(':ReactAndroid') != null) {
    tasks.matching { t ->
      t.name.toLowerCase().contains('externalnativebuild') ||
      t.name.toLowerCase().contains('cmake')
    }.all { t ->
      t.dependsOn(':ReactAndroid:copyReactNativeJniLibsProjectOnly')
    }
  }
}

dependencies {
  // Потрібно, щоби були доступні заголовки/артефакти RN під час збірки
  implementation 'com.facebook.react:react-android'
}
